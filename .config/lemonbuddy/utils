#!/bin/zsh

workspace () {
    #uno=""
	uno="1"
    #due=""
	due="2"
    #tre=""
	tre="3"
    #quattro=""
	quattro="4"
    #cinque=""
	cinque="5"
    d1="%{+u}%{F#b3cbb9}$uno %{F#dfdaeb}$due $tre $quattro $cinque "
    d2="%{+u}$uno%{F#84a9c0} $due %{F#dfdaeb}$tre $quattro $cinque "
    d3="%{+u}$uno $due%{F#6a66a3} $tre %{F#dfdaeb}$quattro $cinque "
    d4="%{+u}$uno $due $tre%{F#542e71} $quattro %{F#dfdaeb}$cinque "
    d5="%{+u}$uno $due $tre $quattro%{F#6f00ff} $cinque%{F#dfdaeb} "
    res=$(echo $(xprop -root -notype _NET_CURRENT_DESKTOP | awk '{print $3}'))

    case $res in
        "0") echo -n "%{U#b3cbb9} $d1 ";;
        "1") echo -n "%{U#84a9c0} $d2 ";;
        "2") echo -n "%{U#6a66a3} $d3 ";;
        "3") echo -n "%{U#542e71} $d4 ";;
        "4") echo -n "%{U#6f00ff} $d5 ";;
    esac
}

volume(){
	V=$(amixer -M  get Master | sed -n 's/^.*\[\([0-9]\+\)%.*$/\1/p'| uniq)

	STATUS=$(amixer -M get Master | sed -n 's/^.*\[\([a-z]\+\).*$/\1/p'| uniq)

	if [[ "$STATUS" == "on" ]]; then
		echo -n "%{F#542e71}%{U#542e71}  %{F-}$V%"
	else
		echo -n %{F#542e71}%{U#542e71} %{F-}
	fi
}

battery(){
    bat_status=$(acpi | awk '{print $3}' | awk '{print substr($0, 0, length($0) - 1)}')
    bat_level=$(acpi | awk '{print $4}' | awk '{print substr($0, 0, length($0) - 1)}')
    bat_life=$(acpi | awk '{print $5}' | awk '{print substr($0, 0, 5)}')

    if [[ "$bat_status" == "Charging" ]]; then
        echo -n "!Y U 0xFF5f819d Y!<span color='#5f819d'></span>$bat_level ($bat_life)";
    elif [[ "$bat_status" == "Full" ]]; then
		echo -n "!Y U 0xFF5f819d Y!<span color='#5f819d'></span>$bat_level%";
    elif [[ "$bat_status" == "Discharging" || "$bat_status" = "Unknown" ]]; then
		if [[ $bat_level == "100%" ]]; then
			echo -n "!Y U 0xFF92D198 Y!<span color='#92D198'></span>$bat_level ($bat_life)";
        elif [[ $bat_level>90 ]]; then
            echo -n "!Y U 0xFF92D198 Y!<span color='#92D198'></span>$bat_level ($bat_life)";
		elif [[ $bat_level>80 ]]; then
			echo -n "!Y U 0xFF92D198 Y!<span color='#92D198'></span>$bat_level ($bat_life)";
        elif [[ $bat_level>70 ]]; then
            echo -n "!Y U 0xFF92D198 Y!<span color='#92D198'></span>$bat_level ($bat_life)";
        elif [[ $bat_level>60 ]]; then
            echo -n "!Y U 0xFFA4DE78 Y!<span color='#A4DE78'></span>$bat_level ($bat_life)";
		elif [[ $bat_level>50 ]]; then
			echo -n "!Y U 0xFFA4DE78 Y!<span color='#A4DE78'></span>$bat_level ($bat_life)";
 		elif [[ $bat_level>40 ]]; then
            echo -n "!Y U 0xFFE6CA77 Y!<span color='#E6CA77'></span>$bat_level ($bat_life)";
   		elif [[ $bat_level>30 ]]; then
            echo -n "!Y U 0xFFE6AB77 Y!<span color='#E6AB77'></span>$bat_level ($bat_life)";
		elif [[ $bat_level>20 ]]; then
            echo -n "!Y U 0xFFE85A5A Y!<span color='#E85A5A'></span>$bat_level ($bat_life)";
		elif [[ $bat_level>10 ]]; then
            echo -n "!Y U 0xFFE85A5A Y!<span color='#E85A5A'></span>$bat_level ($bat_life)";
		else
			notify-send "battery low" -u critical
			echo -n "!Y U 0xFFa54242 Y!<span color='#a54242'></span>$bat_level ($bat_life)";
		fi
	fi
}

music(){
	SONG=$(mpc -f "%title%" | head -n 1)
	STOPPED="volume: n/a   repeat: off   random: off   single: off   consume: off"
	NONE="  -  "
	NONE2=""
	if [[ -e /tmp/mpd.fifo ]] && [[ $SONG != $STOPPED ]]; then
		if [[ $SONG == $NONE ]] || [[ $SONG == $NONE2 ]]; then
			SONG=$(mpc -f "%name%" | head -n 1)
		fi
		echo -n "!Y BG0xFF1A1B22 FG0xFFD0CFDC U0xFF6A66A3 Y!<span color='#6a66a3'></span>$SONG ";
	else
		echo -n "!Y U 0xFF1B1B1B Y!";
	fi
}

up(){
	xdotool set_desktop $(expr $(expr $(xdotool get_desktop) + 1) % 5);
}

down(){
	xdotool set_desktop $(expr $(expr $(xdotool get_desktop) - 1) % 5);
}
if [[ "$1" == "up" ]]; then
    up
elif [[ "$1" == "down" ]]; then
	down
elif [[ "$1" == "av" ]]; then
	actionvol
elif [[ "$1" == "bat" ]]; then
    battery
elif [[ "$1" == "ws" ]]; then
    	workspace
fi
